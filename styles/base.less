@import "syntax-variables";

atom-text-editor {
  background-color: @syntax-background-color;
  color: @syntax-text-color;

  .wrap-guide {
    background-color: @syntax-wrap-guide-color;
  }

  .indent-guide {
    color: @syntax-indent-guide-color;
  }

  .invisible-character {
    color: @syntax-invisible-character-color;
  }

  .gutter {
    background-color: @syntax-gutter-background-color;
    color: @syntax-gutter-text-color;

    .line-number {
      &.cursor-line {
        background-color: @syntax-gutter-background-color-selected;
        color: @syntax-gutter-text-color-selected;
      }

      &.cursor-line-no-selection {
        color: @syntax-gutter-text-color-selected;
      }
    }
  }

  .gutter .line-number.folded,
  .gutter .line-number:after,
  .fold-marker:after {
    color: @light-gray;
  }

  .invisible {
    color: @syntax-text-color;
  }

  .cursor {
    color: @syntax-cursor-color;
  }

  .selection .region {
    background-color: @syntax-selection-color;
  }
}


// Syntax styles

.syntax--comment {
  // color: @light-gray;
  color: @syntax-comment-color;
  font-style: italic;
}

.syntax--keyword {
    // color: @purple;
    color: @syntax-keyword-color;
    font-weight: bold;

    &.syntax--control {
        // color: @purple;
    }

    &.syntax--operator:not(.syntax--logical) {
        color: @syntax-text-color;
        font-weight: normal;
    }
    // &.syntax--assignment {
    //   color: @syntax-text-color;
    // }

    &.syntax--other.syntax--special-method {
        color: @blue;
    }

    &.syntax--other.syntax--unit {
        color: @orange;
    }
}

.syntax--storage {
    // color: @purple;
    color: @syntax-storage-color;
    font-weight: bold;
}

.syntax--constant {
    // color: @orange;
    color: @syntax-constant-color;

  &.syntax--character.syntax--escape {
    color: @cyan;
  }

  &.syntax--numeric {
    color: @orange;
  }

  &.syntax--other.syntax--color {
    color: @cyan;
  }

  &.syntax--other.syntax--symbol {
    color: @green;
  }
}

.syntax--variable {
    // color: @red;
    color: @syntax-variable-color;

    &.syntax--interpolation {
        color: darken(@red, 10%);
    }

    &.syntax--parameter.syntax--function {
        color: @syntax-text-color;
    }
}

.syntax--invalid.syntax--illegal {
  background-color: @red;
  color: @syntax-background-color;
}

.syntax--string {
    // color: @green;
    color: @syntax-string-color;

    &.syntax--block {
        color: @syntax-doc-color;
    }

  &.syntax--regexp {
    color: @cyan;

    .syntax--source.syntax--ruby.syntax--embedded {
      color: @orange;
    }
  }

  &.syntax--other.syntax--link {
    color: @red;
  }
}

.syntax--punctuation {
  &.syntax--definition {
    &.syntax--comment {
    //   color: @light-gray;
      color: @syntax-comment-color;
    }

    // &.syntax--string, // removed, I want the "" separators to be the same color as the strings
    &.syntax--variable,
    &.syntax--parameters,
    &.syntax--array {
      color: @syntax-text-color;
    }

    &.syntax--heading,
    &.syntax--identity {
      color: @blue;
    }

    &.syntax--bold {
      color: @light-orange;
      font-weight: bold;
    }

    &.syntax--italic {
      color: @purple;
      font-style: italic;
    }
  }

  &.syntax--section.syntax--embedded {
    color: darken(@red, 10%);
  }

}

.syntax--support {
  &.syntax--class {
    color: @light-orange;
  }

  &.syntax--function  {
    color: @cyan;

    &.syntax--any-method {
      color: @blue;
    }
  }
}

.syntax--entity {
  &.syntax--name.syntax--function {
    // color: @blue;
    color: @syntax-function-name-color;
    font-weight: bold;
  }
  &.syntax--name.syntax--type {
    // color: @light-orange;
    color: @syntax-type-name-color;
    // text-decoration: underline;
    font-weight: bold;
  }

  &.syntax--other.syntax--inherited-class {
    color: @green;
  }
  &.syntax--name.syntax--class, &.syntax--name.syntax--type.syntax--class {
    color: @light-orange;
  }

  &.syntax--name.syntax--section {
    color: @blue;
  }

  &.syntax--name.syntax--tag {
    color: @red;
    text-decoration: underline;
  }

  &.syntax--other.syntax--attribute-name {
    color: @orange;

    &.syntax--id {
      color: @blue;
    }
  }
}

.syntax--meta {
  &.syntax--class {
    color: @light-orange;
  }

  &.syntax--link {
    color: @orange;
  }

  &.syntax--require {
    color: @blue;
  }

  &.syntax--selector {
    color: @purple;
  }

  &.syntax--separator {
    background-color: @gray;
    color: @syntax-text-color;
  }
}

.syntax--none {
  color: @syntax-text-color;
}

.syntax--markup {
  &.syntax--bold {
    color: @orange;
    font-weight: bold;
  }

  &.syntax--changed {
    color: @purple;
  }

  &.syntax--deleted {
    color: @red;
  }

  &.syntax--italic {
    color: @purple;
    font-style: italic;
  }

  &.syntax--heading .syntax--punctuation.syntax--definition.syntax--heading {
    color: @blue;
  }

  &.syntax--inserted {
    color: @green;
  }

  &.syntax--list {
    color: @red;
  }

  &.syntax--quote {
    color: @orange;
  }

  &.syntax--raw.syntax--inline {
    color: @green;
  }
}

.syntax--source.syntax--gfm .syntax--markup {
  -webkit-font-smoothing: auto;
  &.syntax--heading {
    color: @green;
  }
}


// Mini editor

atom-text-editor[mini] .scroll-view {
  padding-left: 1px;
}


// Markdown specifics

.syntax--heading {
    text-decoration: underline;
    font-weight: bold;
    line-height: 0px;
    &.syntax--heading-1 { font-size: 2.0em; }
    &.syntax--heading-2 { font-size: 1.5em; }
    &.syntax--heading-3 { font-size: 1.3em; }
    &.syntax--heading-4 { font-size: 1.2em; }
    &.syntax--heading-5 { font-size: 1.1em; }
    &.syntax--heading-6 { font-size: 1.0em; }
    &.syntax--heading-7 { font-size: 1.0em; }
    &.syntax--heading-8 { font-size: 1.0em; }
}

// code highlight -- inline
.syntax--markup.syntax--raw.syntax--gfm {
    background-color: rgba(255,255,0,0.1);
}
// code highlight -- block
.syntax--markup.syntax--code.syntax--gfm {
    // background-color: rgba(255,255,255,0.1);
    border-left: 20px solid rgba(255,255,0,0.1);
    // ```python writing for instance in the block part:
    > .syntax--support.syntax--gfm {
        color: rgba(255,255,0,0.5);
        background-color: rgba(255,255,0,0.1);
    }
}
